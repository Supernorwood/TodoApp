package data;

import java.util.HashSet;
import java.util.List;
import java.util.Set;

import javax.persistence.EntityManager;
import javax.persistence.PersistenceContext;

import org.springframework.stereotype.Repository;
import org.springframework.transaction.annotation.Transactional;

import com.fasterxml.jackson.databind.ObjectMapper;

import entities.Todo;
import entities.User;

@Transactional
@Repository
public class TodoDAOImpl implements TodoDAO {

	@PersistenceContext
	private EntityManager em;

	@Override
	public List<Todo> index(int uid) {
		String query = "Select t from Todo t where t.user.id = :id";
		return em.createQuery(query, Todo.class)
				.setParameter("id", uid)
				.getResultList();
	}
	
    // retrieve specific to-do for specific user
    @Override
    public Todo show(int uid, int tid) {
        String query = "Select t From ToDo t Join Fetch t.user u Where t.user.id = :uid And t.id = :tid";
        return em.createQuery(query, Todo.class)
                .setParameter("uid", uid)
                .setParameter("tid", tid)
                .getResultList().get(0);
    }




	@Override
	public Todo update(int id, Todo todo) {
		Todo t = em.find(Todo.class, id);
		t.setTask(todo.getTask());
		t.setDescription(todo.getDescription());
		t.setCompleted(todo.getCompleted());
		t.setUserId(todo.getUserId());
		t.setDueDate(todo.getDueDate());
		t.setCompleteDate(todo.getCompleteDate());
		t.setCreatedAt(todo.getCreatedAt());
		t.setUpdatedAt(todo.getUpdatedAt());

		return t;
	}

	@Override
	public boolean destroy(int id) {
		Todo t = em.find(Todo.class, id);

		if (em.find(Todo.class, id) == null) {
			return false;
		} else {
			em.remove(t);
			return true;
		}

	}

	@Override
	public Todo create(int uid, String todoJson) {
		 try {
	            // convert Json string to ToDo object
	            ObjectMapper mapper = new ObjectMapper();
	            Todo newTodo = mapper.readValue(todoJson,  Todo.class);
	            
	            User user = em.find(User.class, uid);
	            Set<Todo> tds = new HashSet<>();
	            tds.add(newTodo);
	        // persists to database here:
	            user.setTodo(tds);
	            newTodo.setUser(user);
	            
	            return newTodo;
	        }
	        catch(Exception e) {
	            e.printStackTrace();
	            return null;
	        }
	}

	@Override
	public Todo update(int uid, int tid, String todoJson) {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public boolean destroy(int uid, int tid) {
		// TODO Auto-generated method stub
		return false;
	}

}
